name: Post Build Attestation

on:
  workflow_call:
    inputs:
      auth_project_number:
        description: "The GCP Project Number used for authentication. A 12-digit number used as a unique identifier for the project. Used to find workload identity pool."
        required: true
        type: number
      workload_identity_provider_override:
        description: "The ID of the provider to use for authentication. Only used for overriding the default workload identity provider based on project number. It should be in the format of `projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/providers/{{workload_identity_pool_provider_id}}`"
        required: false
        type: string
      service_account:
        description: "The GCP service account connected to the identity pool that will be used by Terraform"
        required: true
        type: string
      # The image reference generated by a build job.
      image_url:
        description: "Setting an image_url of the form registry/repository:tag or registry/repository@digest enables the binary attestation of that image."
        required: true
        type: string

env:
  WORKLOAD_IDENTITY_PROVIDER_OVERRIDE: ${{ inputs.workload_identity_provider_override }}
  AUTH_PROJECT_NUMBER: ${{ inputs.auth_project_number }}
  SERVICE_ACCOUNT: ${{ inputs.service_account }}
  IMAGE_URL: ${{ inputs.image_url }}
  ATTESTOR_PROJECT_ID: kubernetes-dev-94b9

jobs:
  setup-env:
    runs-on: ubuntu-latest
    outputs:
      workload_identity_provider: ${{ steps.set-output.outputs.WORKLOAD_IDENTITY_PROVIDER }}
    steps:
      - name: Set vars
        id: set-output
        run: |
          PRODUCT_NAME=$(echo ${{ env.SERVICE_ACCOUNT }} | sed 's/-.*//')
          DEFAULT_WORKLOAD_IDENTITY="projects/${{ env.AUTH_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${PRODUCT_NAME}-deploy-pool/providers/github-provider"
          OVERRIDE=${{ env.WORKLOAD_IDENTITY_PROVIDER_OVERRIDE }}
          PROVIDER=${OVERRIDE:-$DEFAULT_WORKLOAD_IDENTITY}
          echo "WORKLOAD_IDENTITY_PROVIDER=$PROVIDER" >> $GITHUB_OUTPUT

  attest-kartverket-kontekst:
    name: Image in context of kartverket
    needs: [setup-env]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      WORKLOAD_IDENTITY_PROVIDER: ${{ needs.setup-env.outputs.WORKLOAD_IDENTITY_PROVIDER }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Get Image Digest URL from Image Tag URL
        id: image-digest-url
        run: |
          # If image_url = registry/repository@digest
          if [[ "$IMAGE_URL" == *"@"* ]] 
          then
            image_digest_url="$IMAGE_URL"
          else
            # Convert registry/repository:tag to registry/repository@digest
            image_tag_url=$IMAGE_URL
            digest=$(docker manifest inspect $image_tag_url -v | jq -r .Descriptor.digest)
            base_image_url=${image_tag_url%:*}
            image_digest_url="${base_image_url}@${digest}"
          fi
          echo "image_url=$image_digest_url" >> $GITHUB_OUTPUT

      - name: Check if already attested
        id: get-attestation
        run: |
          attestation=$(gcloud container binauthz attestations list --project="$ATTESTOR_PROJECT_ID" --attestor="projects/$ATTESTOR_PROJECT_ID/attestors/Build-Kartverket" --artifact-url="${{ steps.image-digest-url.outputs.image_url }}")
          attestationoutput=$(printf '%s' $attestation | jq --raw-input --slurp '.' --join-output)
          echo "attestation=$attestationoutput" >> $GITHUB_OUTPUT

      - name: Perform Build-Kartverket attestation
        id: attest-kartverket-kontekst
        if: steps.get-attestation.outputs.attestation == ''
        run: |
          gcloud beta container binauthz attestations sign-and-create \
            --project="$ATTESTOR_PROJECT_ID" \
            --artifact-url="${{ steps.image-digest-url.outputs.image_url }}" \
            --attestor="Build-Kartverket" \
            --attestor-project="$ATTESTOR_PROJECT_ID" \
            --keyversion-project="$ATTESTOR_PROJECT_ID" \
            --keyversion-location="europe-north1" \
            --keyversion-keyring="Attestor-Keyring" \
            --keyversion-key="Build-Kartverket-Key" \
            --keyversion="1"
          echo Attestation succeded

  attest-branch:
    name: Image is on main or master branch
    needs: [setup-env]
    if: github.ref_type == 'branch' && github.ref_name == 'master' || github.ref_name == 'main'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      WORKLOAD_IDENTITY_PROVIDER: ${{ needs.setup-env.outputs.WORKLOAD_IDENTITY_PROVIDER }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Get Image Digest URL from Image Tag URL
        id: image-digest-url
        run: |
          # If image_url = registry/repository@digest
          if [[ "$IMAGE_URL" == *"@"* ]] 
          then
            image_digest_url="$IMAGE_URL"
          else
            # Convert registry/repository:tag to registry/repository@digest
            image_tag_url="$IMAGE_URL"
            digest=$(docker manifest inspect $image_tag_url -v | jq -r .Descriptor.digest)
            base_image_url=${image_tag_url%:*}
            image_digest_url="${base_image_url}@${digest}"
          fi
          echo "image_url=$image_digest_url" >> $GITHUB_OUTPUT

      - name: Check if already attested
        id: get-attestation
        run: |
          attestation=$(gcloud container binauthz attestations list --project="$ATTESTOR_PROJECT_ID" --attestor="projects/$ATTESTOR_PROJECT_ID/attestors/Build-Master-Branch" --artifact-url="${{ steps.image-digest-url.outputs.image_url }}")
          attestationoutput=$(printf '%s' $attestation | jq --raw-input --slurp '.' --join-output)
          echo "attestation=$attestationoutput" >> $GITHUB_OUTPUT

      - name: Perform Build-Master-Branch attestation
        id: attest-branch
        if: steps.get-attestation.outputs.attestation == ''
        run: |
          gcloud beta container binauthz attestations sign-and-create \
            --project="$ATTESTOR_PROJECT_ID" \
            --artifact-url="${{ steps.image-digest-url.outputs.image_url }}" \
            --attestor="Build-Master-Branch" \
            --attestor-project="$ATTESTOR_PROJECT_ID" \
            --keyversion-project="$ATTESTOR_PROJECT_ID" \
            --keyversion-location="europe-north1" \
            --keyversion-keyring="Attestor-Keyring" \
            --keyversion-key="Build-Master-Branch-Key" \
            --keyversion="1"
          echo Attestation succeded
