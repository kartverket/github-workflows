name: Security Scans

on:
  workflow_call:
    inputs:
      # The image reference generated by a build job.
      image_url:
        description: "An image_url of the form registry/repository:tag."
        required: true
        type: string
      workload_identity_provider:
        description: "The ID of the provider to use for authentication. It should be in the format of `projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/providers/{{workload_identity_pool_provider_id}}`"
        required: true
        type: string
      service_account:
        description: "The GCP service account connected to the identity pool that will be used by Terraform"
        required: true
        type: string
      trivy:
        description: "A boolean which determins whether or not trivy vulnerability scan will be run. Defaults to true"
        required: false
        default: true
        type: string
      tfsec:
        description: "A boolean which determins whether or not TFSec security scan will be run. Defaults to true"
        required: false
        default: true
        type: string

jobs:
  tfsec:
    name: TFSec
    if: inputs.tfsec == 'true' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run tfsec
        id: tfsec
        uses: aquasecurity/tfsec-sarif-action@9a83b5c3524f825c020e356335855741fd02745f
        with:
          sarif_file: tfsec.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: tfsec.sarif

  trivy:
    name: Trivy
    if: inputs.trivy == 'true' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ inputs.image_url }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          timeout: '15m'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.service_account }}
      
      - name: Get Image Digest URL from Image Tag URL
        id: image-digest-url
        run: |
          # If image_url = registry/repository@digest
          if [[ "${{inputs.image_url}}" == *"@"* ]] 
          then
            image_digest_url="${{ inputs.image_url }}"
          else
            # Convert registry/repository:tag to registry/repository@digest
            image_tag_url=${{ inputs.image_url }}
            digest=$(docker manifest inspect $image_tag_url -v | jq -r .Descriptor.digest)
            base_image_url=${image_tag_url%:*}
            image_digest_url="${base_image_url}@${digest}"
          fi
          echo "image_url=$image_digest_url" >> $GITHUB_OUTPUT
        
      - name: Check if already attested by Trivy-Scan attestor
        id: get-attestation
        run: |
          attestation=$(gcloud container binauthz attestations list --project="kubernetes-dev-94b9" --attestor="projects/kubernetes-dev-94b9/attestors/Trivy-Scan" --artifact-url="${{ steps.image-digest-url.outputs.image_url }}")
          attestationoutput=$(printf '%s' $attestation | jq --raw-input --slurp '.' --join-output)
          echo "attestation=$attestationoutput" >> $GITHUB_OUTPUT
      
      - name: Perform Trivy-Scan attestation
        id: attest-kartverket-kontekst
        if: steps.get-attestation.outputs.attestation == ''
        run: |
          gcloud beta container binauthz attestations sign-and-create \
            --project="kubernetes-dev-94b9" \
            --artifact-url="${{ steps.image-digest-url.outputs.image_url }}" \
            --attestor="Trivy-Scan" \
            --attestor-project="kubernetes-dev-94b9" \
            --keyversion-project="kubernetes-dev-94b9" \
            --keyversion-location="europe-north1" \
            --keyversion-keyring="Attestor-Keyring" \
            --keyversion-key="Trivy-Scan-Key" \
            --keyversion="1"
          echo Attestation succeded

  check-github-security:
    name: Check Github Security Code Scanning
    if: ${{ always() }}
    needs: [ tfsec, trivy ]
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout repository
        uses: actions/checkout@v3

    # Returns 'true' if there is Code Scanning alert with 'high' or 'critical' security severity level
      - name: Check for Critical and High Severity
        id: severity_check
        run: |
          severity_check=$(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts | jq -e '[.[] | select(.state == "open" and (.rule.security_severity_level == "high" or .rule.security_severity_level == "critical"))] | any')
          if [[ $severity_check == 'true' ]]
          then
            echo "Error: High or critical vulnerabilities detected. Go to the Code Scanning section of the Github Security-tab to review these vulnerabilities."
            exit 1
          fi

  attest:
    name: Attest Github Security Code Scanning
    needs: [ tfsec, trivy, check-github-security ]
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.service_account }}
      
      - name: Get Image Digest URL from Image Tag URL
        id: image-digest-url
        run: |
          # If image_url = registry/repository@digest
          if [[ "${{inputs.image_url}}" == *"@"* ]] 
          then
            image_digest_url="${{ inputs.image_url }}"
          else
            # Convert registry/repository:tag to registry/repository@digest
            image_tag_url=${{ inputs.image_url }}
            digest=$(docker manifest inspect $image_tag_url -v | jq -r .Descriptor.digest)
            base_image_url=${image_tag_url%:*}
            image_digest_url="${base_image_url}@${digest}"
          fi
          echo "image_url=$image_digest_url" >> $GITHUB_OUTPUT
        
      - name: Check if already attested by Security-Scan attestor
        id: get-attestation
        run: |
          attestation=$(gcloud container binauthz attestations list --project="kubernetes-dev-94b9" --attestor="projects/kubernetes-dev-94b9/attestors/Security-Scan" --artifact-url="${{ steps.image-digest-url.outputs.image_url }}")
          attestationoutput=$(printf '%s' $attestation | jq --raw-input --slurp '.' --join-output)
          echo "attestation=$attestationoutput" >> $GITHUB_OUTPUT
      
      - name: Perform Security-Scan attestation
        id: attest-kartverket-kontekst
        if: steps.get-attestation.outputs.attestation == ''
        run: |
          gcloud beta container binauthz attestations sign-and-create \
            --project="kubernetes-dev-94b9" \
            --artifact-url="${{ steps.image-digest-url.outputs.image_url }}" \
            --attestor="Security-Scan" \
            --attestor-project="kubernetes-dev-94b9" \
            --keyversion-project="kubernetes-dev-94b9" \
            --keyversion-location="europe-north1" \
            --keyversion-keyring="Attestor-Keyring" \
            --keyversion-key="Security-Scan-Key" \
            --keyversion="1"
          echo Attestation succeded