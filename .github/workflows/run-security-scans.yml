name: Security Scans

on:
  workflow_call:
    inputs:
      # The image reference generated by a build job.
      image_url:
        description: "An image_url of the form registry/repository:tag."
        required: false
        type: string
      auth_project_number:
        description: "The GCP Project Number used for authentication. A 12-digit number used as a unique identifier for the project. Used to find workload identity pool."
        required: true
        type: string
      workload_identity_provider_override:
        description: "The ID of the provider to use for authentication. Only used for overriding the default workload identity provider based on project number. It should be in the format of `projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/providers/{{workload_identity_pool_provider_id}}`"
        required: false
        type: string
      service_account:
        description: "The GCP service account connected to the identity pool that will be used by Terraform"
        required: true
        type: string
      trivy:
        description: "A boolean which determines whether or not Trivy vulnerability scan will be run. Defaults to true"
        required: false
        default: true
        type: boolean
      tfsec:
        description: "A boolean which determines whether or not TFSec security scan will be run. Defaults to true"
        required: false
        default: true
        type: boolean
      allow_severity_level:
        description: 'A string which determines the highest level of severity the security scans can find while still succeeding workflows. Only "medium", "high" and "critical" values are allowed. Note that these values are case sensitive.'
        required: false
        default: medium
        type: string

env:
  WORKLOAD_IDENTITY_PROVIDER_OVERRIDE: ${{ inputs.workload_identity_provider_override }}
  AUTH_PROJECT_NUMBER: ${{ inputs.auth_project_number }}
  SERVICE_ACCOUNT: ${{ inputs.service_account }}
  IMAGE_URL: ${{ inputs.image_url }}
  REGISTRY: ghcr.io
  BRANCH: ${{ github.ref_name }}
  HEAD_REF: ${{ github.head_ref }}
  EVENT_NAME: ${{ github.event_name }}
  ALLOW_SEVERITY_LEVEL: ${{ inputs.allow_severity_level }}

jobs:
  setup-env:
    runs-on: ubuntu-latest
    outputs:
      WORKLOAD_IDENTITY_PROVIDER: ${{ steps.set-output.outputs.WORKLOAD_IDENTITY_PROVIDER }}
    steps:
      - name: Deprecation Warning
        run: |
          echo "::warning::DEPRECATED: THIS WORKFLOW IS DEPRECATED AND WILL NOT RECEIVE FURTHER UPDATES. PLEASE CHECK OUT [Pharos](https://github.com/kartverket/pharos/) FOR SECURITY SCANS"
      - name: Set vars
        id: set-output
        run: |
          PRODUCT_NAME=$(echo $SERVICE_ACCOUNT | sed 's/-deploy.*//')
          DEFAULT_WORKLOAD_IDENTITY="projects/$AUTH_PROJECT_NUMBER/locations/global/workloadIdentityPools/$PRODUCT_NAME-deploy-pool/providers/github-provider"
          OVERRIDE=$WORKLOAD_IDENTITY_PROVIDER_OVERRIDE
          PROVIDER=${OVERRIDE:-$DEFAULT_WORKLOAD_IDENTITY}
          echo "WORKLOAD_IDENTITY_PROVIDER=$PROVIDER" >> $GITHUB_OUTPUT
      - name: Check severity level
        if: inputs.allow_severity_level != 'medium' && inputs.allow_severity_level != 'high' && inputs.allow_severity_level != 'critical'
        run: |
          echo "Error: The input 'allow_severity_level' was not one of the allowed strings, 'high', 'critical' or 'medium'. Found: "$ALLOW_SEVERITY_LEVEL".";
          exit 1;

  tfsec:
    name: TFSec
    if: inputs.tfsec == true && github.event.pull_request.draft == false
    needs: [setup-env]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      security-events: write
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tfsec
        id: tfsec
        uses: aquasecurity/tfsec-sarif-action@21ded20e8ca120cd9d3d6ab04ef746477542a608
        with:
          sarif_file: tfsec.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: tfsec.sarif

  trivy:
    name: Trivy
    if: inputs.trivy == true && inputs.image_url != '' && github.event.pull_request.draft == false
    needs: [setup-env]
    runs-on: ubuntu-latest
    concurrency: ${{ inputs.image_url }}
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    permissions:
      contents: read
      packages: write
      # required for authentication to GCP
      id-token: write
      actions: read
      security-events: write
    env:
      WORKLOAD_IDENTITY_PROVIDER: ${{ needs.setup-env.outputs.WORKLOAD_IDENTITY_PROVIDER }}
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log into registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker pull image
        run: docker pull $IMAGE_URL

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0
        with:
          image-ref: ${{ env.IMAGE_URL }}
          format: sarif
          output: trivy-results.sarif
          severity: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          timeout: 15m

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

  check-github-security:
    name: Check Github Security Code Scanning
    needs: [tfsec, trivy, setup-env]
    # Always runs after tfsec and trivy, but not if they failed or got cancelled
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    env:
      WORKLOAD_IDENTITY_PROVIDER: ${{ needs.setup-env.outputs.WORKLOAD_IDENTITY_PROVIDER }}
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set high and critical severity outputs
        id: severity_check_outputs
        run: |
          content_header="Accept: application/vnd.github+json"
          auth_header="Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"
          base_url="https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts?ref=${{ github.ref }}&state=open"

          result_severity_check_high=$(curl -s -H "$content_header" -H "$auth_header" "${base_url}&severity=high")
          result_severity_check_critical=$(curl -s -H "$content_header" -H "$auth_header" "${base_url}&severity=critical")
          result_severity_check_error=$(curl -s -H "$content_header" -H "$auth_header" "${base_url}&severity=error")

          is_high_vuln_present=$([[ "$result_severity_check_high" =~ [a-zA-Z] ]] && echo "true" || echo "false")
          is_critical_vuln_present=$([[ "$result_severity_check_critical" =~ [a-zA-Z] || "$result_severity_check_error" =~ [a-zA-Z] ]] && echo "true" || echo "false")

          echo "is_high_vuln_present=$is_high_vuln_present" >> $GITHUB_OUTPUT
          echo "is_critical_vuln_present=$is_critical_vuln_present" >> $GITHUB_OUTPUT

      - name: Succeed or fail based on severity
        id: severity_check
        run: |
          pr_number=$( echo ${{ env.BRANCH }} | sed 's/\/.*//');
          is_high_vuln_present=${{ steps.severity_check_outputs.outputs.is_high_vuln_present }}
          is_critical_vuln_present=${{ steps.severity_check_outputs.outputs.is_critical_vuln_present }}

          error_start_message="Error: Vulnerabilities were found of level"
          error_end_message="Go to the Code Scanning section of the GitHub Security tab to review these vulnerabilities."
          error_search_pr_message="Search for is:open pr:"$pr_number" to find PR related vulnerabilities."

          if [[ $is_high_vuln_present == 'false' &&  $is_critical_vuln_present == 'false' ]]
          then
            echo "Success! No high or critical code scanning alerts.";
            exit 0;
          fi

          if [[ ${{ env.ALLOW_SEVERITY_LEVEL }} == 'medium' ]]
          then
            if [[ ${{ env.EVENT_NAME }} == 'pull_request' ]]
            then
              echo ""$error_start_message" high or critical. "$error_end_message" "$error_search_pr_message"";
              exit 1;
            else
              echo ""$error_start_message" high or critical found on branch "${{ env.BRANCH }}". $error_end_message";
              exit 1;
            fi

          elif [[ ${{ env.ALLOW_SEVERITY_LEVEL }} == 'high' ]]
          then
            if [[ $is_critical_vuln_present == 'false' ]]
            then
              echo "Only high vulnerabilities detected! Allowing due to input ALLOW_SEVERITY_LEVEL being set to high.";
              exit 0;
            fi

            if [[ ${{ env.EVENT_NAME }} == 'pull_request' ]]
            then
              echo ""$error_start_message" critical. "$error_end_message" "$error_search_pr_message"";
              exit 1;
            else
              echo ""$error_start_message" critical found on "${{ env.BRANCH }}" branch. $error_end_message";
              exit 1;
            fi

          elif [[ ${{ env.ALLOW_SEVERITY_LEVEL }} == 'critical' ]]
          then
            echo "High or critical vulnerabilities detected! Allowing due to input ALLOW_SEVERITY_LEVEL being set to critical.";
            exit 0;

          else
            echo "Input ALLOW_SEVERITY_LEVEL was not one of the known values, found "${{ env.ALLOW_SEVERITY_LEVEL }}". If you see this message, please contact SKIP.";
            exit 1;
          fi
